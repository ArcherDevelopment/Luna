-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local Ii1ill1ililll1lli1l = assert local lIlllli1i11l1ii1iIi11 = select local lIliiilIilil1l1IliliI = tonumber local lIliIII1l1Il1I1ll1i1l = unpack local IilIiil1liI1iii1l1I = pcall local iI1ii1Iil1il1l1i1Ii = setfenv local lIlil1ii1Iill1iIllilI = setmetatable local Iil1lIIII1I11l11Iil = type local I1I1iiIiI1I11llllil = getfenv local iIiii1l1IliIillIiil = tostring local lllIliiIiilII11iI1I = error local I1lii11l1iI1lIiiilI = string.sub local lIlIIIliIl1ll1ilIill1 = string.byte local IIIIi1i11iIl1I1li11 = string.char local lIl11i1i1III1i1liiIi1 = string.rep local l1lIlil1lliiIiill1i = string.gsub local lIll1II1iIi1i11IiiIiI = string.match local iiillI1lIlll1iIlliI = table.insert local lIl1illIlII1l1l111Ill = lIlIIIliIl1ll1ilIill1("{", 1) local i1lIl1I1ilIIii1lIIl, lIlI1II1i1iiIlI1iil1i = #{5206}, #{ 609, 5778, 2148, 3245, 5194, 4081, 1636, 5868, 1413, 1351, 5644, 1899, 2409, 3516, 3590, 3379, 4918, 4016, 2750, 4758, 3631, 620 } + lIl1illIlII1l1l111Ill + 130926 local lI1Ill1IiiIlIIIlli1 = {} local lI11i1I1llililllI11 = 1 local II1Ii1iIIlI11IlllII, IiIillIIIllll111IIl local function liI1iliIiI1l1lIl11l(lIlIiiii1l1IiI1l1ll11, ii1IIiIlllilI1liliI) local lll1li1Ii1Il111lil1 lIlIiiii1l1IiI1l1ll11 = l1lIlil1lliiIiill1i(I1lii11l1iI1lIiiilI(lIlIiiii1l1IiI1l1ll11, 5), "..", function(llII1liIl1I1ili1iII) if lIlIIIliIl1ll1ilIill1(llII1liIl1I1ili1iII, 2) == 72 then lll1li1Ii1Il111lil1 = lIliiilIilil1l1IliliI(I1lii11l1iI1lIiiilI(llII1liIl1I1ili1iII, 1, 1)) return "" else local iIllll1iiilIliii1II = IIIIi1i11iIl1I1li11(lIliiilIilil1l1IliliI(llII1liIl1I1ili1iII, 16)) if lll1li1Ii1Il111lil1 then local i1lI1lll1IliliiI1il = lIl11i1i1III1i1liiIi1(iIllll1iiilIliii1II, lll1li1Ii1Il111lil1) lll1li1Ii1Il111lil1 = nil return i1lI1lll1IliliiI1il else return iIllll1iiilIliii1II end end end) local function lIlIl1Ii1III1iliIiiii() local iIl1iliIil1li11iIII = lIlIIIliIl1ll1ilIill1(lIlIiiii1l1IiI1l1ll11, lI11i1I1llililllI11, lI11i1I1llililllI11) lI11i1I1llililllI11 = lI11i1I1llililllI11 + 1 return iIl1iliIil1li11iIII end local function lI1Iil1Ii1iiililll1() local iIl1iliIil1li11iIII, iIllll1iiilIliii1II, i1lI1lll1IliliiI1il, i1Ill1ll1l1ii1111lI = lIlIIIliIl1ll1ilIill1(lIlIiiii1l1IiI1l1ll11, lI11i1I1llililllI11, lI11i1I1llililllI11 + 3) lI11i1I1llililllI11 = lI11i1I1llililllI11 + 4 return i1Ill1ll1l1ii1111lI * 16777216 + i1lI1lll1IliliiI1il * 65536 + iIllll1iiilIliii1II * 256 + iIl1iliIil1li11iIII end local function lIllI1liliIIiII11liii(I1i1IIIilllii1l11lI, lIIli1llilI1Ii111II, lIll1I1Iililllliil1I1) if lIll1I1Iililllliil1I1 then local i1liIi1Ili1liIII1Ii, l1IlIlIi1111llIiiIi = 0, 0 for l1iiIlIl1i111iillIl = lIIli1llilI1Ii111II, lIll1I1Iililllliil1I1 do i1liIi1Ili1liIII1Ii = i1liIi1Ili1liIII1Ii + 2 ^ l1IlIlIi1111llIiiIi * lIllI1liliIIiII11liii(I1i1IIIilllii1l11lI, l1iiIlIl1i111iillIl) l1IlIlIi1111llIiiIi = l1IlIlIi1111llIiiIi + 1 end return i1liIi1Ili1liIII1Ii else local I1l11iliiIllIlll1I1 = 2 ^ (lIIli1llilI1Ii111II - 1) return I1l11iliiIllIlll1I1 <= I1i1IIIilllii1l11lI % (I1l11iliiIllIlll1I1 + I1l11iliiIllIlll1I1) and 1 or 0 end end local function II1Iil1l1i1IIiil1Ii() local iIl1iliIil1li11iIII, iIllll1iiilIliii1II = lI1Iil1Ii1iiililll1(), lI1Iil1Ii1iiililll1() if iIl1iliIil1li11iIII == 0 and iIllll1iiilIliii1II == 0 then return 0 end return (-2 * lIllI1liliIIiII11liii(iIllll1iiilIliii1II, 32) + 1) * 2 ^ (lIllI1liliIIiII11liii(iIllll1iiilIliii1II, 21, 31) - 1023) * ((lIllI1liliIIiII11liii(iIllll1iiilIliii1II, 1, 20) * 4294967296 + iIl1iliIil1li11iIII) / 4503599627370496 + 1) end local i1iiiii1iiI1liIllli = bit or bit32 local IIIiIii1l1I111lIIiI = i1iiiii1iiI1liIllli and i1iiiii1iiI1liIllli.bxor or function(iIl1iliIil1li11iIII, iIllll1iiilIliii1II) local iI1l111li1liIliiill = 1 local i1lI1lll1IliliiI1il = 0 while iIl1iliIil1li11iIII > 0 and iIllll1iiilIliii1II > 0 do local li111il111IliIi11Il = iIl1iliIil1li11iIII % 2 local lIli1illiIllill1IIIll = iIllll1iiilIliii1II % 2 if li111il111IliIi11Il ~= lIli1illiIllill1IIIll then i1lI1lll1IliliiI1il = i1lI1lll1IliliiI1il + iI1l111li1liIliiill end iIl1iliIil1li11iIII = (iIl1iliIil1li11iIII - li111il111IliIi11Il) / 2 iIllll1iiilIliii1II = (iIllll1iiilIliii1II - lIli1illiIllill1IIIll) / 2 iI1l111li1liIliiill = iI1l111li1liIliiill * 2 end if iIl1iliIil1li11iIII < iIllll1iiilIliii1II then iIl1iliIil1li11iIII = iIllll1iiilIliii1II end while iIl1iliIil1li11iIII > 0 do local li111il111IliIi11Il = iIl1iliIil1li11iIII % 2 if li111il111IliIi11Il > 0 then i1lI1lll1IliliiI1il = i1lI1lll1IliliiI1il + iI1l111li1liIliiill end iIl1iliIil1li11iIII = (iIl1iliIil1li11iIII - li111il111IliIi11Il) / 2 iI1l111li1liIliiill = iI1l111li1liIliiill * 2 end return i1lI1lll1IliliiI1il end local function ll1IllliliIlIi1lIil(lliII11iiI11lllllli) local lIl1Il1il1li1Ii1l1IIl = { lIlIIIliIl1ll1ilIill1(lIlIiiii1l1IiI1l1ll11, lI11i1I1llililllI11, lI11i1I1llililllI11 + 3) } lI11i1I1llililllI11 = lI11i1I1llililllI11 + 4 local iIl1iliIil1li11iIII = IIIiIii1l1I111lIIiI(lIl1Il1il1li1Ii1l1IIl[1], IiIillIIIllll111IIl) local iIllll1iiilIliii1II = IIIiIii1l1I111lIIiI(lIl1Il1il1li1Ii1l1IIl[2], IiIillIIIllll111IIl) local i1lI1lll1IliliiI1il = IIIiIii1l1I111lIIiI(lIl1Il1il1li1Ii1l1IIl[3], IiIillIIIllll111IIl) local i1Ill1ll1l1ii1111lI = IIIiIii1l1I111lIIiI(lIl1Il1il1li1Ii1l1IIl[4], IiIillIIIllll111IIl) IiIillIIIllll111IIl = (233 * IiIillIIIllll111IIl + lliII11iiI11lllllli) % 256 return i1Ill1ll1l1ii1111lI * 16777216 + i1lI1lll1IliliiI1il * 65536 + iIllll1iiilIliii1II * 256 + iIl1iliIil1li11iIII end local function IiIllii1iiIillIIlli(IilIl11iiI1ilIIIi1l) local ill11illiiiIliIiIli = lI1Iil1Ii1iiililll1() local lllIiiI1iiiiI1l1111 = "" for l1iiIlIl1i111iillIl = i1lIl1I1ilIIii1lIIl, ill11illiiiIliIiIli do lllIiiI1iiiiI1l1111 = lllIiiI1iiiiI1l1111 .. IIIIi1i11iIl1I1li11(IIIiIii1l1I111lIIiI(lIlIIIliIl1ll1ilIill1(lIlIiiii1l1IiI1l1ll11, lI11i1I1llililllI11 + l1iiIlIl1i111iillIl - 1), II1Ii1iIIlI11IlllII)) II1Ii1iIIlI11IlllII = (IilIl11iiI1ilIIIi1l * II1Ii1iIIlI11IlllII + 79) % 256 end lI11i1I1llililllI11 = lI11i1I1llililllI11 + ill11illiiiIliIiIli return lllIiiI1iiiiI1l1111 end II1Ii1iIIlI11IlllII = lIlIl1Ii1III1iliIiiii() IiIillIIIllll111IIl = lIlIl1Ii1III1iliIiiii() local liIi1lii1lI1il1Ii1I = {} for l1iiIlIl1i111iillIl = i1lIl1I1ilIIii1lIIl, lIlIl1Ii1III1iliIiiii() do local iII111ll1iIiIliII1l = lIlIl1Ii1III1iliIiiii() local ll1liillIliiIIilIlI = (l1iiIlIl1i111iillIl - 1) * 2 liIi1lii1lI1il1Ii1I[ll1liillIliiIIilIlI] = lIllI1liliIIiII11liii(iII111ll1iIiIliII1l, 1, 4) liIi1lii1lI1il1Ii1I[ll1liillIliiIIilIlI + 1] = lIllI1liliIIiII11liii(iII111ll1iIiIliII1l, 5, 8) end local function lilI1IIil111lIIl11I() local lIli1iIIl11iiIliIIi = { {}, nil, nil, {}, nil, {}, {} } lIlIl1Ii1III1iliIiiii() lI1Iil1Ii1iiililll1() lIlIl1Ii1III1iliIiiii() lI1Iil1Ii1iiililll1() lIlIl1Ii1III1iliIiiii() lI1Iil1Ii1iiililll1() lIlIl1Ii1III1iliIiiii() lIlIl1Ii1III1iliIiiii() lIli1iIIl11iiIliIIi[5] = lIlIl1Ii1III1iliIiiii() local iIilllIliIIiiiIilii = lI1Iil1Ii1iiililll1() - (#{ 176, 4334, 2291, 5036, 6382, 3605, 5228, 215, 393, 5954, 4678, 3083, 1507, 5055, 1835, 409, 4095, 6741, 4162, 3025, 6501, 163, 1648, 2225 } + lIl1illIlII1l1l111Ill + 133640) local lIlII1il1lIi1i1lii1ll = lIlIl1Ii1III1iliIiiii() for l1iiIlIl1i111iillIl = i1lIl1I1ilIIii1lIIl, iIilllIliIIiiiIilii do local ilIIIi1ii1lIl1II1ll = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local iII111ll1iIiIliII1l = ll1IllliliIlIi1lIil(lIlII1il1lIi1i1lii1ll) ilIIIi1ii1lIl1II1ll[3] = lIllI1liliIIiII11liii(iII111ll1iIiIliII1l, #{ 4630, 1558, 4219, 2101, 2295, 5293, 4943, 258, 5223, 2712, 4592, 5044, 2076, 4607, 450, 756, 1806, 4789, 4301 }, #{ 1490, 6807, 6417, 3763, 5013, 4, 6540, 6239, 2365, 108, 2076, 2166, 2086, 5248, 5811, 4916, 2551, 6651, 2033, 5760 } + lIl1illIlII1l1l111Ill + -117) ilIIIi1ii1lIl1II1ll[8] = lIllI1liliIIiII11liii(iII111ll1iIiIliII1l, #{ 1530, 1778, 5279, 2231, 2469, 499, 440, 766, 6943, 2942 }, #{ 6037, 3169, 989, 2994, 1014, 1395, 1700, 1430, 303, 157, 1397, 6684, 6311, 4906, 3845, 2442, 4937, 6205 }) ilIIIi1ii1lIl1II1ll[7] = lIllI1liliIIiII11liii(iII111ll1iIiIliII1l, #{6511}, #{ 3807, 3024, 125, 3907, 3970, 832, 5249, 1893, 1483 }) ilIIIi1ii1lIl1II1ll[10] = lIllI1liliIIiII11liii(iII111ll1iIiIliII1l, #{3638}, #{ 6573, 3690, 6733, 915, 2849, 964, 6872, 6164, 1127, 3637, 4979, 5596, 1817, 5353, 1954, 891, 233, 6667 }) ilIIIi1ii1lIl1II1ll[6] = lIllI1liliIIiII11liii(iII111ll1iIiIliII1l, #{ 5576, 4779, 690, 5862, 2631, 389, 3588, 266, 1174, 4424, 2624, 5424, 2511, 5550, 5441, 1222, 6520, 1907, 5383, 632, 5986, 1675, 6918, 1499 } + lIl1illIlII1l1l111Ill + -120, #{ 6778, 3159, 2793, 1347, 2586, 1845, 4417, 1841, 3160, 5521, 1312, 6426, 744, 929, 1087, 272, 6731, 1127, 2811, 5009, 6237 } + lIl1illIlII1l1l111Ill + -112) ilIIIi1ii1lIl1II1ll[126910] = lIllI1liliIIiII11liii(iII111ll1iIiIliII1l, #{ 4762, 4550, 4582, 1364, 1649, 5211, 2156, 3242, 3324, 5414, 2815, 6627, 2440, 5777, 6565, 1069, 3875, 4120, 5617, 6675, 4004, 4787, 3730 } + lIl1illIlII1l1l111Ill + -119, #{ 3372, 1164, 2271, 2821, 5935, 5158, 2945, 1632, 5398, 2974, 4360, 1489, 6060, 1958, 6341, 361, 5653, 5144, 582, 5768, 3151 } + lIl1illIlII1l1l111Ill + -112) lIli1iIIl11iiIliIIi[6][l1iiIlIl1i111iillIl] = ilIIIi1ii1lIl1II1ll end lIlIl1Ii1III1iliIiiii() lI1Iil1Ii1iiililll1() lI1Iil1Ii1iiililll1() lIlIl1Ii1III1iliIiiii() lIli1iIIl11iiIliIIi[2] = lIlIl1Ii1III1iliIiiii() lI1Iil1Ii1iiililll1() lI1Iil1Ii1iiililll1() lIlIl1Ii1III1iliIiiii() lIlIl1Ii1III1iliIiiii() lIli1iIIl11iiIliIIi[3] = lIlIl1Ii1III1iliIiiii() local lIl1ll11iIiiili11il1i = lI1Iil1Ii1iiililll1() - (#{ 3900, 6938, 4842, 1550, 589, 1946, 1330, 5436, 6900, 4704, 1081, 5554, 372, 4994, 2032, 5934, 2532, 6695, 4799, 402 } + lIl1illIlII1l1l111Ill + 133606) local i1lIlIIl1lIiiliI1i1 = lIlIl1Ii1III1iliIiiii() for l1iiIlIl1i111iillIl = i1lIl1I1ilIIii1lIIl, lIl1ll11iIiiili11il1i do local lIlii1l1i1IiIIIiIil11 local Iil1lIIII1I11l11Iil = lIlIl1Ii1III1iliIiiii() if Iil1lIIII1I11l11Iil == #{ 5233, 4834, 6800, 825, 3101, 2775, 3595, 5609, 5855, 1556, 107, 1488, 6197, 4863, 4565, 498, 2658, 5921, 1838, 2147, 5791, 5230, 6803, 3652 } + lIl1illIlII1l1l111Ill + -71 then lIlii1l1i1IiIIIiIil11 = I1lii11l1iI1lIiiilI(IiIllii1iiIillIIlli(i1lIlIIl1lIiiliI1i1), #{6139}) end if Iil1lIIII1I11l11Iil == #{ 5307, 1673, 449, 3428, 1309, 2899, 1516, 307, 5764, 2843, 456, 316, 415, 593, 4277, 319, 3572, 118, 5379, 3264, 2804, 3917, 1673 } + lIl1illIlII1l1l111Ill + -56 then lIlii1l1i1IiIIIiIil11 = II1Iil1l1i1IIiil1Ii() end if Iil1lIIII1I11l11Iil == #{ 6630, 6256, 6671, 1923, 5394, 6104, 1427, 5463, 877, 3570, 4263, 3797, 512, 3098, 3921, 1408, 531, 6175, 2471, 2856 } + lIl1illIlII1l1l111Ill + -56 then lIlii1l1i1IiIIIiIil11 = I1lii11l1iI1lIiiilI(IiIllii1iiIillIIlli(i1lIlIIl1lIiiliI1i1), #{ 64, 5070, 6097, 4172, 201 }) end if Iil1lIIII1I11l11Iil == #{ 2052, 6461, 5516, 3547, 1323, 3945, 4000, 5904, 2477, 4856, 6564, 3532, 2175, 3820, 6768, 1624, 2016, 2855, 5204 } then lIlii1l1i1IiIIIiIil11 = I1lii11l1iI1lIiiilI(IiIllii1iiIillIIlli(i1lIlIIl1lIiiliI1i1), #{6139}) end if Iil1lIIII1I11l11Iil == #{ 4856, 2112, 1534, 3466, 3240, 1548, 748, 347, 5536, 85, 6315, 1563, 5819, 2285, 3205, 1204, 1640, 6730, 2425, 893 } + lIl1illIlII1l1l111Ill + -40 then lIlii1l1i1IiIIIiIil11 = lIlIl1Ii1III1iliIiiii() + lI1Iil1Ii1iiililll1() + II1Iil1l1i1IIiil1Ii() end if Iil1lIIII1I11l11Iil == #{ 2605, 4828, 5730, 4488, 615, 1832, 4415, 6029, 1376, 430, 3310, 6184, 6715, 922, 2862, 3251, 6130, 2500, 4212, 2883, 2820, 2189, 1301 } + lIl1illIlII1l1l111Ill + -83 then lIlii1l1i1IiIIIiIil11 = lIlIl1Ii1III1iliIiiii() end if Iil1lIIII1I11l11Iil == #{ 2996, 6875, 3260, 933, 3784, 1633, 4401, 2859, 5717, 5148, 1276, 532, 5746, 4564, 2480, 2693, 2475, 5075, 1991, 19, 2190, 3592, 6477 } + lIl1illIlII1l1l111Ill + -57 then lIlii1l1i1IiIIIiIil11 = #{ 6307, 2064, 3727, 825, 3775, 3542, 5423, 5878, 6413, 5781, 5522, 6111, 3845, 6255, 2633, 542, 6548, 6139, 4290, 1250 } + lIl1illIlII1l1l111Ill + 32055 == #{ 3484, 276, 5004, 4926, 1948, 6054, 6293, 3230, 3096, 1384, 2229, 45, 612, 1527, 6062, 530, 3349, 2299, 1554, 6813, 1395, 4139 } + lIl1illIlII1l1l111Ill + 122369 end if Iil1lIIII1I11l11Iil == #{ 875, 4176, 1417, 6317, 6166, 4507, 2937, 3013, 1469, 4973, 5743, 6274, 3409, 6815, 4432, 4351, 4916, 5640, 721, 3002, 3183, 99 } + lIl1illIlII1l1l111Ill + 67 then lIlii1l1i1IiIIIiIil11 = II1Iil1l1i1IIiil1Ii() end if Iil1lIIII1I11l11Iil == #{ 6278, 493, 3578, 2039, 3457, 6850, 1800, 693, 865, 2005, 762, 1664, 4240, 2637, 4887, 455, 6167, 195, 3190, 4090, 3454 } + lIl1illIlII1l1l111Ill + 72 then lIlii1l1i1IiIIIiIil11 = #{ 5853, 6954, 387, 6884, 351, 206, 2532, 6803, 5806, 1602, 2182, 5213, 804, 1314, 1522, 953, 4538, 45, 4120, 4799, 5140, 2435, 3099, 6932 } + lIl1illIlII1l1l111Ill + 73891 == #{ 5853, 6954, 387, 6884, 351, 206, 2532, 6803, 5806, 1602, 2182, 5213, 804, 1314, 1522, 953, 4538, 45, 4120, 4799, 5140, 2435, 3099, 6932 } + lIl1illIlII1l1l111Ill + 73891 end lIli1iIIl11iiIliIIi[1][l1iiIlIl1i111iillIl - i1lIl1I1ilIIii1lIIl] = lIlii1l1i1IiIIIiIil11 end for l1iiIlIl1i111iillIl = i1lIl1I1ilIIii1lIIl, iIilllIliIIiiiIilii do local ilIIIi1ii1lIl1II1ll = lIli1iIIl11iiIliIIi[6][l1iiIlIl1i111iillIl] local I11li1IIlIlilili11l = liIi1lii1lI1il1Ii1I[ilIIIi1ii1lIl1II1ll[6]] if I11li1IIlIlilili11l == #{566, 4625} and ilIIIi1ii1lIl1II1ll[8] > 255 then ilIIIi1ii1lIl1II1ll[1] = true ilIIIi1ii1lIl1II1ll[4] = lIli1iIIl11iiIliIIi[1][ilIIIi1ii1lIl1II1ll[8] - 256] end if I11li1IIlIlilili11l == #{ 207, 4502, 3652, 6118 } then ilIIIi1ii1lIl1II1ll[2] = lIli1iIIl11iiIliIIi[1][ilIIIi1ii1lIl1II1ll[10]] end if I11li1IIlIlilili11l == #{ 1281, 4629, 6673 } then if ilIIIi1ii1lIl1II1ll[7] > 255 then ilIIIi1ii1lIl1II1ll[9] = true ilIIIi1ii1lIl1II1ll[5] = lIli1iIIl11iiIliIIi[1][ilIIIi1ii1lIl1II1ll[7] - 256] end if ilIIIi1ii1lIl1II1ll[8] > 255 then ilIIIi1ii1lIl1II1ll[1] = true ilIIIi1ii1lIl1II1ll[4] = lIli1iIIl11iiIliIIi[1][ilIIIi1ii1lIl1II1ll[8] - 256] end end if I11li1IIlIlilili11l == #{72} and ilIIIi1ii1lIl1II1ll[7] > 255 then ilIIIi1ii1lIl1II1ll[9] = true ilIIIi1ii1lIl1II1ll[5] = lIli1iIIl11iiIliIIi[1][ilIIIi1ii1lIl1II1ll[7] - 256] end end lI1Iil1Ii1iiililll1() lIlIl1Ii1III1iliIiiii() lI1Iil1Ii1iiililll1() local lIl1ll11iIiiili11il1i = lI1Iil1Ii1iiililll1() for l1iiIlIl1i111iillIl = i1lIl1I1ilIIii1lIIl, lIl1ll11iIiiili11il1i do lIli1iIIl11iiIliIIi[7][l1iiIlIl1i111iillIl - i1lIl1I1ilIIii1lIIl] = lilI1IIil111lIIl11I() end local lIl1ll11iIiiili11il1i = lI1Iil1Ii1iiililll1() for l1iiIlIl1i111iillIl = i1lIl1I1ilIIii1lIIl, lIl1ll11iIiiili11il1i do lIli1iIIl11iiIliIIi[4][l1iiIlIl1i111iillIl] = lI1Iil1Ii1iiililll1() end lI1Iil1Ii1iiililll1() return lIli1iIIl11iiIliIIi end local function lIliIIIIIlil1IIliIlII(lIli1iIIl11iiIliIIi, ii1IIiIlllilI1liliI, iliIi11liI1l11iiil1) local llll1lIllll11iI1liI, lIl1i1Il1i1111lilI11i = 1, 18 local lIliiliI11I111ll1i1 = lIli1iIIl11iiIliIIi[6] local i1liiIl1i11i11i1lII = 5 local iII1I1IIlilliliii1I = lIli1iIIl11iiIliIIi[7] local lIllIlIIl1I11lIll11II = lIli1iIIl11iiIliIIi[3] local Il1lilIIiIilili111l = lIli1iIIl11iiIliIIi[2] local II1IlIIii1l1I1iI1li = 6 local iillIilIl1lIIiliIll = lIli1iIIl11iiIliIIi[4] local lIlillIiiIi1lIII1l1ll = 7 local function lIll11IiI1lIl1iiIll1l(...) local iliIli1iI1IiIl1lii1 = 0 local il11IIi111IiiII1Il1 = { lIliIII1l1Il1I1ll1i1l({}, 1, Il1lilIIiIilili111l) } local I1iIiIilIll1ili1IIl = 1 local III1iIIlii1i1ill1Ii = {} local iI1IlIl11lIlii1li1I = {} local ii1IIiIlllilI1liliI = I1I1iiIiI1I11llllil() local llilIiIi11IIIiiiIII = { ... } local l1lIlliiIIIi111l1Ii = #llilIiIi11IIIiiiIII - 1 for l1iiIlIl1i111iillIl = 0, l1lIlliiIIIi111l1Ii do if l1iiIlIl1i111iillIl < lIllIlIIl1I11lIll11II then il11IIi111IiiII1Il1[l1iiIlIl1i111iillIl] = llilIiIi11IIIiiiIII[l1iiIlIl1i111iillIl + 1] end end local function II1Illl1Il1IIlIIlII(...) local i1lI1lll1IliliiI1il = lIlllli1i11l1ii1iIi11("#", ...) local iII1Ii1IillIll11IIi = { ... } return i1lI1lll1IliliiI1il, iII1Ii1IillIll11IIi end local function l11111liI1iIiliiiI1() while true do local l1i1Il1IllI1liIIilI = lIliiliI11I111ll1i1[I1iIiIilIll1ili1IIl] local IlIlI11I111lIliilIi = l1i1Il1IllI1liIIilI[6] I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl + 1 if IlIlI11I111lIliilIi < 12 then if IlIlI11I111lIliilIi >= 6 then if IlIlI11I111lIliilIi < 9 then if IlIlI11I111lIliilIi >= 7 then if IlIlI11I111lIliilIi ~= 8 then local iIllll1iiilIliii1II, i1lI1lll1IliliiI1il if l1i1Il1IllI1liIIilI[9] then iIllll1iiilIliii1II = l1i1Il1IllI1liIIilI[5] else iIllll1iiilIliii1II = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[7]] end if l1i1Il1IllI1liIIilI[1] then i1lI1lll1IliliiI1il = l1i1Il1IllI1liIIilI[4] else i1lI1lll1IliliiI1il = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[8]] end if iIllll1iiilIliii1II == i1lI1lll1IliliiI1il ~= (l1i1Il1IllI1liIIilI[3] ~= 0) then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl + 1 end else il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = l1i1Il1IllI1liIIilI[7] ~= 0 if l1i1Il1IllI1liIIilI[8] ~= 0 then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl + 1 end end else il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = ii1IIiIlllilI1liliI[l1i1Il1IllI1liIIilI[2]] end elseif IlIlI11I111lIliilIi >= 10 then if IlIlI11I111lIliilIi == 11 then if l1i1Il1IllI1liIIilI[8] == 183 then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl - 1 lIliiliI11I111ll1i1[I1iIiIilIll1ili1IIl] = { [6] = 17, [3] = (l1i1Il1IllI1liIIilI[3] - 102) % 256, [7] = (l1i1Il1IllI1liIIilI[7] - 102) % 256 } else local iiIIiilIIIi1iilliiI = l1i1Il1IllI1liIIilI[3] local lIl1ll11iIiiili11il1i = l1i1Il1IllI1liIIilI[7] local lIl1IliIIIi1ii1i1iii1 = lIl1ll11iIiiili11il1i > 0 and lIl1ll11iIiiili11il1i - 1 or l1lIlliiIIIi111l1Ii - lIllIlIIl1I11lIll11II if lIl1IliIIIi1ii1i1iii1 < 0 then lIl1IliIIIi1ii1i1iii1 = -1 end for l1iiIlIl1i111iillIl = iiIIiilIIIi1iilliiI, iiIIiilIIIi1iilliiI + lIl1IliIIIi1ii1i1iii1 do il11IIi111IiiII1Il1[l1iiIlIl1i111iillIl] = llilIiIi11IIIiiiIII[lIllIlIIl1I11lIll11II + (l1iiIlIl1i111iillIl - iiIIiilIIIi1iilliiI) + 1] end if lIl1ll11iIiiili11il1i == 0 then iliIli1iI1IiIl1lii1 = iiIIiilIIIi1iilliiI + lIl1IliIIIi1ii1i1iii1 for l1iiIlIl1i111iillIl = iliIli1iI1IiIl1lii1 + 1, Il1lilIIiIilili111l do il11IIi111IiiII1Il1[l1iiIlIl1i111iillIl] = nil end end end elseif l1i1Il1IllI1liIIilI[7] == 95 then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl - 1 lIliiliI11I111ll1i1[I1iIiIilIll1ili1IIl] = { [6] = 15, [3] = (l1i1Il1IllI1liIIilI[3] - 231) % 256, [7] = (l1i1Il1IllI1liIIilI[8] - 231) % 256 } elseif not not il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] == (l1i1Il1IllI1liIIilI[8] == 0) then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl + 1 end else local i1lI1lll1IliliiI1il if l1i1Il1IllI1liIIilI[1] then i1lI1lll1IliliiI1il = l1i1Il1IllI1liIIilI[4] else i1lI1lll1IliliiI1il = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[8]] end il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[7]][i1lI1lll1IliliiI1il] end elseif IlIlI11I111lIliilIi >= 3 then if IlIlI11I111lIliilIi < 4 then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl + (l1i1Il1IllI1liIIilI[10] - lIlI1II1i1iiIlI1iil1i) elseif IlIlI11I111lIliilIi == 5 then il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = { lIliIII1l1Il1I1ll1i1l(lI1Ill1IiiIlIIIlli1, 1, l1i1Il1IllI1liIIilI[7] == 0 and 255 or l1i1Il1IllI1liIIilI[7]) } else il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = l1i1Il1IllI1liIIilI[2] end elseif IlIlI11I111lIliilIi < 1 then if l1i1Il1IllI1liIIilI[7] == 3 then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl - 1 lIliiliI11I111ll1i1[I1iIiIilIll1ili1IIl] = { [6] = 16, [3] = (l1i1Il1IllI1liIIilI[3] - 15) % 256, [7] = (l1i1Il1IllI1liIIilI[8] - 15) % 256 } else local iiIIiilIIIi1iilliiI = l1i1Il1IllI1liIIilI[3] local ll1liillIliiIIilIlI = iiIIiilIIIi1iilliiI + 2 local I1iIilii1li1llIIlil = { il11IIi111IiiII1Il1[iiIIiilIIIi1iilliiI](il11IIi111IiiII1Il1[iiIIiilIIIi1iilliiI + 1], il11IIi111IiiII1Il1[iiIIiilIIIi1iilliiI + 2]) } for l1iiIlIl1i111iillIl = 1, l1i1Il1IllI1liIIilI[8] do il11IIi111IiiII1Il1[ll1liillIliiIIilIlI + l1iiIlIl1i111iillIl] = I1iIilii1li1llIIlil[l1iiIlIl1i111iillIl] end if il11IIi111IiiII1Il1[iiIIiilIIIi1iilliiI + 3] ~= nil then il11IIi111IiiII1Il1[iiIIiilIIIi1iilliiI + 2] = il11IIi111IiiII1Il1[iiIIiilIIIi1iilliiI + 3] else I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl + 1 end end elseif IlIlI11I111lIliilIi ~= 2 then il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[7]] else ii1IIiIlllilI1liliI[l1i1Il1IllI1liIIilI[2]] = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] end elseif IlIlI11I111lIliilIi < 18 then if IlIlI11I111lIliilIi < 15 then if IlIlI11I111lIliilIi < 13 then local iiIIiilIIIi1iilliiI = l1i1Il1IllI1liIIilI[3] local llilIiIi11IIIiiiIII = l1i1Il1IllI1liIIilI[7] local I1i11lI1l11IIlIlI11 = l1i1Il1IllI1liIIilI[8] local lIlIiliil1I11ilIl1iIi, lIl1iIi1iIIIl1I1iiil1, l11111liI1iIiliiiI1 if llilIiIi11IIIiiiIII ~= 1 then if llilIiIi11IIIiiiIII ~= 0 then lIl1iIi1iIIIl1I1iiil1 = iiIIiilIIIi1iilliiI + llilIiIi11IIIiiiIII - 1 else lIl1iIi1iIIIl1I1iiil1 = iliIli1iI1IiIl1lii1 end lIl1iIi1iIIIl1I1iiil1, lIlIiliil1I11ilIl1iIi = II1Illl1Il1IIlIIlII(il11IIi111IiiII1Il1[iiIIiilIIIi1iilliiI](lIliIII1l1Il1I1ll1i1l(il11IIi111IiiII1Il1, iiIIiilIIIi1iilliiI + 1, lIl1iIi1iIIIl1I1iiil1))) else lIl1iIi1iIIIl1I1iiil1, lIlIiliil1I11ilIl1iIi = II1Illl1Il1IIlIIlII(il11IIi111IiiII1Il1[iiIIiilIIIi1iilliiI]()) end if I1i11lI1l11IIlIlI11 ~= 1 then if I1i11lI1l11IIlIlI11 ~= 0 then lIl1iIi1iIIIl1I1iiil1 = iiIIiilIIIi1iilliiI + I1i11lI1l11IIlIlI11 - 2 iliIli1iI1IiIl1lii1 = lIl1iIi1iIIIl1I1iiil1 + 1 else lIl1iIi1iIIIl1I1iiil1 = lIl1iIi1iIIIl1I1iiil1 + iiIIiilIIIi1iilliiI - 1 iliIli1iI1IiIl1lii1 = lIl1iIi1iIIIl1I1iiil1 end l11111liI1iIiliiiI1 = 0 for l1iiIlIl1i111iillIl = iiIIiilIIIi1iilliiI, lIl1iIi1iIIIl1I1iiil1 do l11111liI1iIiliiiI1 = l11111liI1iIiliiiI1 + 1 il11IIi111IiiII1Il1[l1iiIlIl1i111iillIl] = lIlIiliil1I11ilIl1iIi[l11111liI1iIiliiiI1] end else iliIli1iI1IiIl1lii1 = iiIIiilIIIi1iilliiI - 1 end for l1iiIlIl1i111iillIl = iliIli1iI1IiIl1lii1 + 1, Il1lilIIiIilili111l do il11IIi111IiiII1Il1[l1iiIlIl1i111iillIl] = nil end elseif IlIlI11I111lIliilIi ~= 14 then if l1i1Il1IllI1liIIilI[8] == 178 then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl - 1 lIliiliI11I111ll1i1[I1iIiIilIll1ili1IIl] = { [6] = 18, [3] = (l1i1Il1IllI1liIIilI[3] - 60) % 256, [7] = (l1i1Il1IllI1liIIilI[7] - 60) % 256 } else il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = #il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[7]] end else local iIllll1iiilIliii1II, i1lI1lll1IliliiI1il if l1i1Il1IllI1liIIilI[9] then iIllll1iiilIliii1II = l1i1Il1IllI1liIIilI[5] else iIllll1iiilIliii1II = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[7]] end if l1i1Il1IllI1liIIilI[1] then i1lI1lll1IliliiI1il = l1i1Il1IllI1liIIilI[4] else i1lI1lll1IliliiI1il = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[8]] end il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]][iIllll1iiilIliii1II] = i1lI1lll1IliliiI1il end elseif IlIlI11I111lIliilIi < 16 then III1iIIlii1i1ill1Ii[il11IIi111IiiII1Il1] = nil local iiIIiilIIIi1iilliiI = l1i1Il1IllI1liIIilI[3] local ll1Iil1i1llili1Ilii = l1i1Il1IllI1liIIilI[7] if ll1Iil1i1llili1Ilii == 1 then return true end local lIl1iIi1iIIIl1I1iiil1 = iiIIiilIIIi1iilliiI + ll1Iil1i1llili1Ilii - 2 if ll1Iil1i1llili1Ilii == 0 then lIl1iIi1iIIIl1I1iiil1 = iliIli1iI1IiIl1lii1 end return true, iiIIiilIIIi1iilliiI, lIl1iIi1iIIIl1I1iiil1 elseif IlIlI11I111lIliilIi == 17 then if l1i1Il1IllI1liIIilI[8] == 134 then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl - 1 lIliiliI11I111ll1i1[I1iIiIilIll1ili1IIl] = { [6] = 10, [3] = (l1i1Il1IllI1liIIilI[3] - 214) % 256, [8] = (l1i1Il1IllI1liIIilI[7] - 214) % 256 } else il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = not il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[7]] end else for l1iiIlIl1i111iillIl = l1i1Il1IllI1liIIilI[3], l1i1Il1IllI1liIIilI[7] do il11IIi111IiiII1Il1[l1iiIlIl1i111iillIl] = nil end end elseif IlIlI11I111lIliilIi < 21 then if IlIlI11I111lIliilIi < 19 then if l1i1Il1IllI1liIIilI[8] == 103 then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl - 1 lIliiliI11I111ll1i1[I1iIiIilIll1ili1IIl] = { [6] = 0, [3] = (l1i1Il1IllI1liIIilI[3] - 163) % 256, [8] = (l1i1Il1IllI1liIIilI[7] - 163) % 256 } else il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = iliIi11liI1l11iiil1[l1i1Il1IllI1liIIilI[7]] end elseif IlIlI11I111lIliilIi == 20 then local iIllll1iiilIliii1II, i1lI1lll1IliliiI1il if l1i1Il1IllI1liIIilI[9] then iIllll1iiilIliii1II = l1i1Il1IllI1liIIilI[5] else iIllll1iiilIliii1II = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[7]] end if l1i1Il1IllI1liIIilI[1] then i1lI1lll1IliliiI1il = l1i1Il1IllI1liIIilI[4] else i1lI1lll1IliliiI1il = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[8]] end il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = iIllll1iiilIliii1II + i1lI1lll1IliliiI1il elseif l1i1Il1IllI1liIIilI[8] == 129 then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl - 1 lIliiliI11I111ll1i1[I1iIiIilIll1ili1IIl] = { [6] = 1, [3] = (l1i1Il1IllI1liIIilI[3] - 161) % 256, [7] = (l1i1Il1IllI1liIIilI[7] - 161) % 256 } else local IiiIllliii11il1ilil = l1i1Il1IllI1liIIilI[3] local lIlI1lii111IIliIilil1 = {} for lIllilii11ii1il1Illii, i11i1i11l111I1ll1II in pairs(III1iIIlii1i1ill1Ii[il11IIi111IiiII1Il1]) do for lIllilii11ii1il1Illii, li11IliIii1IlIli1II in pairs(i11i1i11l111I1ll1II) do if li11IliIii1IlIli1II[1] == il11IIi111IiiII1Il1 and IiiIllliii11il1ilil <= li11IliIii1IlIli1II[2] then local lIl1ll11I11iIl1I1IIii = li11IliIii1IlIli1II[2] if not lIlI1lii111IIliIilil1[lIl1ll11I11iIl1I1IIii] then lIliIIIIIlil1IIliIlII(iI1IlIl11lIlii1li1I, il11IIi111IiiII1Il1[lIl1ll11I11iIl1I1IIii]) lIlI1lii111IIliIilil1[lIl1ll11I11iIl1I1IIii] = #iI1IlIl11lIlii1li1I end li11IliIii1IlIli1II[1] = iI1IlIl11lIlii1li1I li11IliIii1IlIli1II[2] = lIlI1lii111IIliIilil1[lIl1ll11I11iIl1I1IIii] end end end end elseif IlIlI11I111lIliilIi < 23 then if IlIlI11I111lIliilIi == 22 then local ll1liillIliiIIilIlI = (l1i1Il1IllI1liIIilI[8] - 1) * 50 local lIlII1liIi1111iIiIi1i = l1i1Il1IllI1liIIilI[7] if lIlII1liIi1111iIiIi1i == 0 then lIlII1liIi1111iIiIi1i = iliIli1iI1IiIl1lii1 - l1i1Il1IllI1liIIilI[3] end for l1iiIlIl1i111iillIl = 1, lIlII1liIi1111iIiIi1i do il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]][ll1liillIliiIIilIlI + l1iiIlIl1i111iillIl] = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3] + l1iiIlIl1i111iillIl] end else local lIl1II1Il1illI1ll1iI1 = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[7]] local i1lI1lll1IliliiI1il if l1i1Il1IllI1liIIilI[1] then i1lI1lll1IliliiI1il = l1i1Il1IllI1liIIilI[4] else i1lI1lll1IliliiI1il = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[8]] end il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3] + 1] = lIl1II1Il1illI1ll1iI1 il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = lIl1II1Il1illI1ll1iI1[i1lI1lll1IliliiI1il] end elseif IlIlI11I111lIliilIi ~= 24 then local III1Il11i1ilI1ii1l1 = iII1I1IIlilliliii1I[l1i1Il1IllI1liIIilI[10]] local i1lIi1iiIiIi1iIIll1 = {} if III1Il11i1ilI1ii1l1[i1liiIl1i11i11i1lII] > 0 then do local i11i1i11l111I1ll1II = {} i1lIi1iiIiIi1iIIll1 = lIlil1ii1Iill1iIllilI({}, { __index = function(iII1Ii1IillIll11IIi, IilI1lIli1iiliII1Il) local li11IliIii1IlIli1II = i11i1i11l111I1ll1II[IilI1lIli1iiliII1Il] return li11IliIii1IlIli1II[1][li11IliIii1IlIli1II[2]] end, __newindex = function(iII1Ii1IillIll11IIi, IilI1lIli1iiliII1Il, lIliIIIlI1llli1IiIliI) local li11IliIii1IlIli1II = i11i1i11l111I1ll1II[IilI1lIli1iiliII1Il] li11IliIii1IlIli1II[1][li11IliIii1IlIli1II[2]] = lIliIIIlI1llli1IiIliI end }) for l1iiIlIl1i111iillIl = 1, III1Il11i1ilI1ii1l1[i1liiIl1i11i11i1lII] do local lliIli1ll1iliIIiii1 = lIliiliI11I111ll1i1[I1iIiIilIll1ili1IIl] if lliIli1ll1iliIIiii1[II1IlIIii1l1I1iI1li] == llll1lIllll11iI1liI then i11i1i11l111I1ll1II[l1iiIlIl1i111iillIl - 1] = { il11IIi111IiiII1Il1, lliIli1ll1iliIIiii1[lIlillIiiIi1lIII1l1ll] } elseif lliIli1ll1iliIIiii1[II1IlIIii1l1I1iI1li] == lIl1i1Il1i1111lilI11i then i11i1i11l111I1ll1II[l1iiIlIl1i111iillIl - 1] = { iliIi11liI1l11iiil1, lliIli1ll1iliIIiii1[lIlillIiiIi1lIII1l1ll] } end I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl + 1 end if not III1iIIlii1i1ill1Ii[il11IIi111IiiII1Il1] then III1iIIlii1i1ill1Ii[il11IIi111IiiII1Il1] = {i11i1i11l111I1ll1II} else iiillI1lIlll1iIlliI(III1iIIlii1i1ill1Ii[il11IIi111IiiII1Il1], i11i1i11l111I1ll1II) end end end local II1iIIi1IIIlilll1ll = lIliIIIIIlil1IIliIlII(III1Il11i1ilI1ii1l1, ii1IIiIlllilI1liliI, i1lIi1iiIiIi1iIIll1) il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[3]] = II1iIIi1IIIlilll1ll else local iIllll1iiilIliii1II, i1lI1lll1IliliiI1il if l1i1Il1IllI1liIIilI[9] then iIllll1iiilIliii1II = l1i1Il1IllI1liIIilI[5] else iIllll1iiilIliii1II = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[7]] end if l1i1Il1IllI1liIIilI[1] then i1lI1lll1IliliiI1il = l1i1Il1IllI1liIIilI[4] else i1lI1lll1IliliiI1il = il11IIi111IiiII1Il1[l1i1Il1IllI1liIIilI[8]] end if iIllll1iiilIliii1II < i1lI1lll1IliliiI1il ~= (l1i1Il1IllI1liIIilI[3] ~= 0) then I1iIiIilIll1ili1IIl = I1iIiIilIll1ili1IIl + 1 end end end end local I1lII1llIIilIIiiIiI, lllIiiI1iiiiI1l1111, IiiIllliii11il1ilil, I11Iili1i1lI1ilIiIi = IilIiil1liI1iii1l1I(l11111liI1iIiliiiI1) if I1lII1llIIilIIiiIiI then if IiiIllliii11il1ilil then return lIliIII1l1Il1I1ll1i1l(il11IIi111IiiII1Il1, IiiIllliii11il1ilil, I11Iili1i1lI1ilIiIi) end else lllIliiIiilII11iI1I("Luraph Script:" .. (iillIilIl1lIIiliIll[I1iIiIilIll1ili1IIl - 1] or "") .. ": " .. iIiii1l1IliIillIiil(lllIiiI1iiiiI1l1111), 0) end end iI1ii1Iil1il1l1i1Ii(lIll11IiI1lIl1iiIll1l, ii1IIiIlllilI1liliI) return lIll11IiI1lIl1iiIll1l end local lIlI1lii111IIliIilil1 = lilI1IIil111lIIl11I() return lIliIIIIIlil1IIliIlII(lIlI1lii111IIliIilil1, ii1IIiIlllilI1liliI)() end return liI1iliIiI1l1lIl11liiIiI1I11llllil())
